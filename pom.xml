<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.redhat.demo</groupId>
    <artifactId>clean-architecture-software-sample-project</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>21</java.version>
        <compiler-plugin.version>3.11.0</compiler-plugin.version>
        <kotlin.version>1.9.21</kotlin.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.6.3</quarkus.platform.version>
        <spring.platform.version>3.2.0</spring.platform.version>
        <spring.openapi.version>2.3.0</spring.openapi.version>
        <postgres.version>42.7.1</postgres.version>
        <mongo.version>3.12.14</mongo.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.0.0</surefire-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <meminitial>4096m</meminitial>
                    <maxmem>8192m</maxmem>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <javaParameters>true</javaParameters>
                    <jvmTarget>${java.version}</jvmTarget>
                    <compilerPlugins>
                        <plugin>all-open</plugin>
                    </compilerPlugins>
                    <pluginOptions>
                        <option>all-open:annotation=jakarta.ws.rs.Path</option>
                        <option>all-open:annotation=jakarta.enterprise.context.ApplicationScoped</option>
                        <option>all-open:annotation=io.quarkus.test.junit.QuarkusTest</option>
                    </pluginOptions>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <maven.home>${maven.home}</maven.home>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>${quarkus.platform.group-id}</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.platform.version}</version>
                    <extensions>true</extensions>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build</goal>
                                <goal>generate-code</goal>
                                <goal>generate-code-tests</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.platform.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>quarkus-native</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-container-image-docker</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>monolith-springboot</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/monolith-configuration-springboot</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/postgres-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-dependencies</artifactId>
                        <version>${spring.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.springdoc</groupId>
                        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                        <version>${spring.openapi.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>monolith-quarkus</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/monolith-configuration-quarkus</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/postgres-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>${quarkus.platform.group-id}</groupId>
                        <artifactId>${quarkus.platform.artifact-id}</artifactId>
                        <version>${quarkus.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>microservice-account</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/microservice-account-configuration</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/postgres-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/mongodb-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>${quarkus.platform.group-id}</groupId>
                        <artifactId>${quarkus.platform.artifact-id}</artifactId>
                        <version>${quarkus.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>microservice-person</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/microservice-person-configuration</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/mongodb-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>${quarkus.platform.group-id}</groupId>
                        <artifactId>${quarkus.platform.artifact-id}</artifactId>
                        <version>${quarkus.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>microservice-address</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/microservice-address-configuration</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/mongodb-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>${quarkus.platform.group-id}</groupId>
                        <artifactId>${quarkus.platform.artifact-id}</artifactId>
                        <version>${quarkus.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>quarkus</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/microservice-address-configuration</module>
                <module>application/configuration/microservice-person-configuration</module>
                <module>application/configuration/microservice-account-configuration</module>
                <module>application/configuration/monolith-configuration-quarkus</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/mongodb-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/postgres-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>${quarkus.platform.group-id}</groupId>
                        <artifactId>${quarkus.platform.artifact-id}</artifactId>
                        <version>${quarkus.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>springboot</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>application/configuration/monolith-configuration-springboot</module>
                <module>application/core/domain/v1</module>
                <module>application/core/usecases/v1</module>
                <module>application/infrastructure/dataproviders/core-dataprovider</module>
                <module>application/infrastructure/dataproviders/in-memory-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/mongodb-dataprovider/v1</module>
                <module>application/infrastructure/dataproviders/postgres-dataprovider/v1</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-dependencies</artifactId>
                        <version>${spring.platform.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.springdoc</groupId>
                        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                        <version>${spring.openapi.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>
</project>
